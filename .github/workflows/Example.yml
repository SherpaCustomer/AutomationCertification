# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: 
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Install git version
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      # Determine version
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Skyline DataMiner Deploy Action
        env: 
          Skyline-deploy-action-namespace: dev
        # You may pin to the exact commit or the version.
        uses: SkylineCommunications/Skyline-DataMiner-Deploy-Action@60f62657b31947d0173c11bf14632281b0f203d2
        with:
          # The API-key generated in the DCP Admin app as authentication for a certain DataMiner System. E.g. g597e77412e34297b827c2570a8fa2bc
          api-key: ${{secrets.MYAPIKEY}}
          # The path to the .sln file of the solution. Atm only DataMiner Automation Script solutions are supported. E.g ./Example/Script.sln.
          solution-path: './AutomationScript.sln'
          # The chosen name of the package. E.g. MyPackageName.
          package-name: 'MyScript'
          # The version number for the package (format A.B.C). E.g. 1.0.1.
          version: ${{ steps.gitversion.outputs.majorMinorPatch }}
          
